{"version":3,"sources":["config/firebaseConfig.js","config/firebase.js","components/Header.js","components/Jumbotron.js","components/ProjectCard.js","components/projectlist.js","components/ProjectCards.js","components/Projects.js","components/Home.js","components/ContactUs.js","components/Contact.js","components/About.js","components/Work.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseContext","createContext","config_firebase","_ref","children","firebase","app","database","getApps","length","initializeApp","console","log","options","getDatabase","api","getProjects","get","child","dbRef","then","snapshot","exists","listsObj","toJSON","listsArr","Object","keys","map","key","catch","error","db","ref","react_default","a","createElement","Provider","value","Header","Navbar","className","expand","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","href","rel","target","react_fontawesome_index_es","icon","faGithub","size","faLinkedin","Button","Index_Jumbotron","Jumbotron","fluid","ProjectCard","ProjectImg","ProjectTitle","ProjectDesc","ProjectURL","ProjectGit","ProjectTechs","ProjectDesigns","baseUrl","Card","Img","src","concat","Body","Title","Text","ListGroup","tech","index","ListGroupItem","faHtml5","faCss3","faJsSquare","faDatabase","faPhp","faReact","faYoutube","faJava","Footer","defaultProps","projectList","TopProject","ProjectDate","ProjectCards","context","useContext","projects","setProjects","useState","useEffect","async","response","projectListHook","proj","components_ProjectCard","filter","project","Projects","components_ProjectCards","Home","React","Component","render","components_Jumbotron","components_Projects","ContactUs","form","useRef","Form","onSubmit","e","preventDefault","emailjs","sendForm","current","result","text","Group","Label","Control","type","name","Contact","constructor","props","super","this","state","email","message","onNameChange","bind","onEmailChange","onMessageChange","resetForm","setState","faEnvelope","Container","components_ContactUs","event","About","sort","b","Work","search","filterProjectsbyTech","handleTechPress","filterProjectsBySearch","handleSearchChange","[object Object]","includes","toLowerCase","ButtonToolbar","ButtonGroup","onClick","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","contextType","App","document","title","react_router_dom","components_Header","react_router","path","component","exact","rootElement","getElementById","ReactDOM","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a822dfb7.chunk.js","sourcesContent":["export default  {\r\n\r\n  apiKey: \"AIzaSyD9ENAA5zhpoCzJ1rYjbG3TH0ursjvjksI\",\r\n\r\n  authDomain: \"portfolio-3f0e7.firebaseapp.com\",\r\n\r\n  databaseURL: \"https://portfolio-3f0e7-default-rtdb.europe-west1.firebasedatabase.app\",\r\n\r\n  projectId: \"portfolio-3f0e7\",\r\n\r\n  storageBucket: \"portfolio-3f0e7.appspot.com\",\r\n\r\n  messagingSenderId: \"241656942325\",\r\n\r\n  appId: \"1:241656942325:web:4e6248fbbbac47a6597fbc\"\r\n\r\n};\r\n","//this contains the firebase context and provider\r\nimport React, { createContext, useEffect } from \"react\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport {\r\n  getDatabase,\r\n  ref,\r\n  DataSnapshot,\r\n  onValue,\r\n  get,\r\n  child,\r\n  set\r\n} from \"firebase/database\";\r\n\r\nconst FirebaseContext = createContext(null);\r\nexport { FirebaseContext };\r\n\r\nexport default ({ children }) => {\r\n  let firebase = {\r\n    app: null,\r\n    database: null\r\n  };\r\n\r\n  //check if firebase app has been init\r\n  if (!getApps.length) {\r\n    const app = initializeApp(firebaseConfig);\r\n    console.log(app.options.databaseURL);\r\n    firebase = {\r\n      app: app,\r\n      database: getDatabase(app),\r\n\r\n      api: {\r\n        getProjects\r\n      }\r\n    };\r\n  }\r\n  const db = firebase.database;\r\n  const dbRef = ref(db);\r\n  //function to query lists from the database\r\n  function getProjects() {\r\n    const response = get(child(dbRef, `projectList`))\r\n      .then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const listsObj = snapshot.toJSON();\r\n          let listsArr = Object.keys(listsObj).map((key) => listsObj[key]);\r\n          return listsArr;\r\n        } else {\r\n          return \"No data available\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n\r\n  return (\r\n    <FirebaseContext.Provider value={firebase}>\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};","import React from \"react\";\r\nimport { Navbar, Button, Nav } from \"react-bootstrap\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar-background\" expand=\"lg\" variant=\"dark\">\r\n        <Navbar.Brand as={Link} to=\"./home\" className=\"navbar-name\">\r\n          Eoin O'Neill\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"./home\" className=\"navbar-text\">\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"./work\" className=\"navbar-text\">\r\n              Work\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"./contact\" className=\"navbar-text\">\r\n              Contact Me\r\n            </Nav.Link>\r\n            {/* <Nav.Link as={Link} to=\"/about\" className=\"navbar-text\">\r\n              About Me\r\n            </Nav.Link> */}\r\n          </Nav>\r\n          <div className=\"navbar-right\">\r\n            <div className=\"navbar-icons\">\r\n              <a\r\n                href=\"https://github.com/e-oneill\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faGithub}\r\n                  size={\"lg\"}\r\n                  className=\"navbar-icon\"\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/eoin-o-neill-785768134/\"\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faLinkedin}\r\n                  size={\"lg\"}\r\n                  className=\"navbar-icon\"\r\n                />\r\n              </a>\r\n            </div>\r\n\r\n            <Button\r\n              href=\"./files/IT_CV.pdf\"\r\n              variant=\"success\"\r\n              size=\"large\"\r\n              target=\"_blank\"\r\n            >\r\n              CV/Resume\r\n            </Button>\r\n          </div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nconst Index_Jumbotron = () => {\r\n  return (\r\n    <Jumbotron fluid>\r\n        <h1>Full-Stack Software and Web Development</h1>\r\n        <h3>MySQL, REST APIs, Java, PHP, JavaScript, React, CSS</h3>\r\n        <div className=\"jumbotron_text\">\r\n        <p>\r\n        I'm graduating from Maynooth University in June 2022, \r\n        and am looking for a junior development position. I have learned and worked with all of the technologies listed above and am always open to learning new technologies and frameworks.\r\n        </p>\r\n        </div>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Index_Jumbotron;\r\n","import React from 'react'\r\nimport {Card, Button, ListGroup, ListGroupItem} from 'react-bootstrap'\r\nimport {faDatabase} from '@fortawesome/free-solid-svg-icons'\r\nimport {faHtml5, faCss3, faJsSquare, faPhp, faReact, faYoutube, faJava } from '@fortawesome/free-brands-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ProjectCard = ({ProjectImg, ProjectTitle, ProjectDesc, ProjectURL, ProjectGit, ProjectTechs, ProjectDesigns, baseUrl}) => {\r\n    // const techs = {ProjectTechs};\r\n    // const hasDesigns = false;\r\n    \r\n    return (\r\n        <div className=\"card_container\">\r\n                <Card className=\"project-card\">\r\n                    <Card.Img className=\"card-image\" variant=\"top\" src={`./img/${ProjectImg}`} />\r\n                    <Card.Body>\r\n                    <Card.Title><h3>{ProjectTitle}</h3></Card.Title>\r\n                    <Card.Text>\r\n                        {ProjectDesc}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                            {ProjectTechs.map((tech, index)  => {\r\n                                if (tech === 'HTML') {\r\n                                    return (\r\n                                        <ListGroupItem key=\"html\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faHtml5} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'CSS') {\r\n                                    return (\r\n                                        <ListGroupItem key=\"css\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon  icon={faCss3} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'Javascript') {\r\n                                    return (\r\n                                        <ListGroupItem key=\"javascript\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faJsSquare} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'SQL' || tech === 'MongoDB') {\r\n                                    return (\r\n                                        <ListGroupItem key=\"SQL\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faDatabase} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'PHP') {\r\n                                    return (\r\n                                        <ListGroupItem key=\"php\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faPhp} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'React'){\r\n                                    return (\r\n                                        <ListGroupItem key=\"react\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faReact} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'Youtube API'){\r\n                                    return (\r\n                                        <ListGroupItem key=\"youtube-api\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faYoutube} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                                if (tech === 'Java'){\r\n                                    return (\r\n                                        <ListGroupItem key=\"java\"><small className=\"text-muted\"> \r\n                                        <FontAwesomeIcon icon={faJava} /> {tech}\r\n                                        </small></ListGroupItem>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </ListGroup>\r\n                    <Card.Footer>\r\n                    <div className=\"card_btns_container\">\r\n                    <Button variant=\"success\" size=\"sm\" className=\"card-btn\" href={ProjectURL} target=\"_blank\">Website</Button>\r\n                    <Button variant=\"outline-success\" size=\"sm\" className=\"card-btn\" href={ProjectGit} target=\"_blank\">Code</Button>\r\n                    {ProjectDesigns.length > 0 &&\r\n                    <Button variant=\"dark\" size=\"sm\" className=\"card-btn\" href={ProjectDesigns} target=\"_blank\">Designs</Button>\r\n                    }\r\n                    </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nProjectCard.defaultProps = {\r\n    ProjectImg: 'retainers-preview.jpg',\r\n    ProjectTitle: 'Retainers and Warfare',\r\n    ProjectDesc: 'A database-driven website for running Dungeons and Dragons Characters as well as creating and managing retainers and armies.',\r\n    ProjectURL:\"https://retainers.monkehh.com\",\r\n    ProjectGit:\"https://github.com/e-oneill/Warfare-and-Retainers\",\r\n    ProjectDesigns:\"\",\r\n    ProjectTechs:[\r\n        'HTML','CSS','JS'\r\n        ]\r\n}\r\n\r\nexport default ProjectCard\r\n","export const projectList = [\r\n  {\r\n    id: 0,\r\n    ProjectImg: \"retainers-preview.jpg\",\r\n    ProjectTitle: \"Retainers and Warfare\",\r\n    TopProject: true,\r\n    ProjectDate: \"2020\",\r\n    ProjectDesc:\r\n      \"A database-driven website for running Dungeons and Dragons Characters as well as creating and managing retainers and armies.\",\r\n    ProjectURL: \"https://retainers.eoin-oneill.ie\",\r\n    ProjectGit: \"https://github.com/e-oneill/Warfare-and-Retainers\",\r\n    ProjectDesigns:\r\n      \"https://www.figma.com/file/wZMED6nyX2FWqsvBUaEZWP/Retainers-and-Warfare\",\r\n    ProjectTechs: [\"CSS\", \"Javascript\", \"SQL\", \"PHP\"]\r\n  },\r\n  {\r\n    id: 1,\r\n    ProjectImg: \"frello.png\",\r\n    ProjectTitle: \"(F)rello\",\r\n    TopProject: true,\r\n    ProjectDate: \"2021\",\r\n    ProjectDesc:\r\n      \"A simple UI project, using React, Redux and Material UI to create a facsimile of the list and cards UI on Trello.\",\r\n    ProjectURL: \"https://e-oneill.github.io/csb-4x0xw/\",\r\n    ProjectGit: \"https://codesandbox.io/s/frello-2-4x0xw\",\r\n    ProjectTechs: [\"CSS\", \"Javascript\", \"React\"]\r\n  },\r\n  // {\r\n  //   id: 2,\r\n  //   ProjectImg: \"workout-app.jpg\",\r\n  //   ProjectTitle: \"Java Project\",\r\n  //   TopProject: true,\r\n  //   ProjectDate: \"2021\",\r\n  //   ProjectDesc: \"Software Project from Semester 2, a Java Programme.\",\r\n  //   ProjectURL: \"https://retainers.monkehh.com\",\r\n  //   ProjectGit: \"https://github.com/e-oneill/Warfare-and-Retainers\",\r\n  //   ProjectDesigns:\r\n  //     \"https://www.figma.com/file/wZMED6nyX2FWqsvBUaEZWP/Retainers-and-Warfare\",\r\n  //   ProjectTechs: [\"Java\", \"SQL\"]\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   ProjectImg: \"workout-app.jpg\",\r\n  //   ProjectTitle: \"Monster Brewery\",\r\n  //   TopProject: false,\r\n  //   ProjectDate: \"2021\",\r\n  //   ProjectDesc:\r\n  //     \"A Java-based desktop application for creating homebrew monsters for D&D 5th Edition. Features an exporter for Foundry VTT.\",\r\n  //   ProjectURL: \"https://retainers.monkehh.com\",\r\n  //   ProjectGit: \"https://github.com/e-oneill/Warfare-and-Retainers\",\r\n  //   ProjectDesigns:\r\n  //     \"https://www.figma.com/file/wZMED6nyX2FWqsvBUaEZWP/Retainers-and-Warfare\",\r\n  //   ProjectTechs: [\"Java\", \"SQL\", \"JavaScript\"]\r\n  // }\r\n];\r\n","import React, {useContext, useState, useEffect } from \"react\";\r\n// import { CardDeck } from \"react-bootstrap\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { FirebaseContext } from \"../config/firebase\";\r\nimport {projectList} from './projectlist';\r\nconst ProjectCards = () => {\r\n  const context = useContext(FirebaseContext);\r\n  const [projects, setProjects] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function projectListHook() {\r\n      const response = await context.api.getProjects();\r\n      if (projects == null)\r\n      {\r\n      setProjects(response);\r\n      }\r\n    }\r\n\r\n    projectListHook()    \r\n  })\r\n  function filterTopProjects()\r\n  {\r\n    return function (project) {\r\n      return project.TopProject === true;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row project cards container\">\r\n      { (projects != null)\r\n        ?\r\n        projects.map((proj) => {\r\n          return (\r\n          <div key={proj.id} className=\"col-12 col-md-4\">\r\n            <ProjectCard\r\n              key={proj.id}\r\n              ProjectImg={proj.ProjectImg}\r\n              ProjectTitle={proj.ProjectTitle}\r\n              ProjectDesc={proj.ProjectDesc}\r\n              ProjectURL={proj.ProjectURL}\r\n              ProjectGit={proj.ProjectGit}\r\n              ProjectDesigns={proj.ProjectDesigns}\r\n              ProjectTechs={Object.keys(proj.ProjectTechs).map((key) => proj.ProjectTechs[key])}\r\n              />\r\n          </div>\r\n            \r\n          )\r\n        }) : \"\"\r\n      }\r\n      {\r\n        (projects == null) ?\r\n        projectList.filter(filterTopProjects()).map((proj)=> {\r\n        return (\r\n        <div key={proj.id} className=\"col-12 col-md-4\">\r\n          \r\n          {/* <ProjectCard\r\n            key={proj.id}\r\n            ProjectImg={proj.ProjectImg}\r\n            ProjectTitle={proj.ProjectTitle}\r\n            ProjectDesc={proj.ProjectDesc}\r\n            ProjectURL={proj.ProjectURL}\r\n            ProjectGit={proj.ProjectGit}\r\n            ProjectDesigns={proj.ProjectDesigns}\r\n            ProjectTechs={proj.ProjectTechs}\r\n            /> */}\r\n        </div>\r\n        )\r\n        })\r\n        : \"\"\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCards;\r\n","import React from \"react\";\r\nimport ProjectCards from \"./ProjectCards\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div className=\"projects_container\">\r\n        <h1>Top Projects</h1>\r\n        <ProjectCards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport Jumbotron from \"./Jumbotron\";\r\nimport Projects from \"./Projects\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n  return (\r\n    <div className=\"home_container\">\r\n      <Jumbotron />\r\n      <Projects />\r\n    </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Home;\r\n","import React, {useRef} from \"react\";\r\nimport { Button, Form} from \"react-bootstrap\";\r\nimport emailjs from \"emailjs-com\";\r\nexport const ContactUs = () => {\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    emailjs.sendForm('service_u9kbtag', 'template_f8qt60c', form.current, 'user_mCAbB1pye0qc41TVKtJ79')\r\n    .then((result) => {\r\n      console.log(result.text);\r\n    }, (error) => {\r\n      console.log(error.text);\r\n    }); \r\n  }\r\n\r\n  return (\r\n    // <form ref={form} onSubmit={sendEmail}>\r\n    //   <label>Name</label>\r\n    //   <input type=\"text\" name=\"from_name\" />\r\n    //   <label>Email</label>\r\n    //   <input type=\"email\" name=\"user_email\" />\r\n    //   <label>Message</label>\r\n    //   <textarea name=\"message\" />\r\n    //   <input type=\"submit\" value=\"Send\" />\r\n    // </form>\r\n\r\n    <Form ref={form} onSubmit={sendEmail}>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"text\" name=\"from_name\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control type=\"email\" name=\"user_email\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Message</Form.Label>\r\n        <Form.Control name=\"message\" />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Button variant=\"primary\" type=\"submit\" value=\"Send\" >\r\n          Submit\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\nexport default ContactUs;\r\n","import React from \"react\";\r\nimport ContactUs from \"./ContactUs\";\r\nimport { Container, Card} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      message: ''\r\n    } \r\n\r\n    this.onNameChange = this.onNameChange.bind(this);\r\n    this.onEmailChange = this.onEmailChange.bind(this);\r\n    this.onMessageChange = this.onMessageChange.bind(this);\r\n  }\r\n  \r\n\r\n\r\n  resetForm(){\r\n    this.setState({name: '', email: '', message: ''})\r\n  }\r\n\r\n  render () {\r\n\r\n\r\n    return (\r\n      <div className=\"about_container\">\r\n      <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/emailjs-com@3/dist/email.min.js\"></script>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n          <h1>Getting in touch</h1>\r\n            <p className=\"contact-text\">\r\n              If you want to contact me about an opportunity or work, the best way to get in touch is over LinkedIn or Email.\r\n            </p>\r\n            <Card className=\"contact-card linkedin\">\r\n              <a href=\"https://www.linkedin.com/in/eoin-o-neill-785768134/\" className=\"contact-link\" rel=\"noreferrer\" target=\"_blank\">\r\n              <Card.Body>\r\n              <FontAwesomeIcon\r\n                  icon={faLinkedin}\r\n                  size={\"lg\"}\r\n                  className=\"contact-symbol\"\r\n                />\r\n                <span className=\"contact-card-text\">LinkedIn</span>\r\n              </Card.Body>\r\n              </a>\r\n            </Card>\r\n            <Card className=\"contact-card email\">\r\n              <a href=\"mailto:eoneill@live.co.uk\" className=\"contact-link\" rel=\"noreferrer\" target=\"_blank\">\r\n              <Card.Body>\r\n              <FontAwesomeIcon\r\n                  icon={faEnvelope}\r\n                  size={\"lg\"}\r\n                  className=\"contact-symbol\"\r\n                />\r\n                <span className=\"contact-card-text\">Email</span>\r\n              </Card.Body>\r\n              </a>\r\n            </Card>\r\n            <p className=\"contact-text\">\r\n              If you want to get in touch about one of my projects, the best way to do it is on the github page that is linked on each project's card.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <Container>\r\n              <h2>Send me a message</h2>\r\n              <ContactUs />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  \r\n\r\n  onNameChange(event) {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange(event) {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onMessageChange(event) {\r\n    this.setState({message: event.target.value})\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about_container\">\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { FirebaseContext } from \"../config/firebase\";\r\nimport {\r\n  \r\n  Button,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { projectList } from \"./projectlist\";\r\n\r\nconst workList = projectList;\r\nfunction compare(a, b) {\r\n  if (a.ProjectTitle < b.ProjectTitle) {\r\n    return -1;\r\n  }\r\n  if (a.ProjectTitle > b.ProjectTitle) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nworkList.sort(compare);\r\nclass Work extends React.Component {\r\n  static contextType = FirebaseContext\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {tech: \"\", search: \"\", projects: []};\r\n    this.filterProjectsbyTech = this.filterProjectsbyTech.bind(this);\r\n    this.handleTechPress = this.handleTechPress.bind(this);\r\n    this.filterProjectsBySearch = this.filterProjectsBySearch.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await this.context.api.getProjects();\r\n    if (this.state.projects.length === 0)\r\n    {\r\n    this.setState({projects: response});\r\n    }\r\n    // console.log(this.state.projects);\r\n  }\r\n\r\n  handleTechPress(event)\r\n  {\r\n    this.setState({tech: event.target.value})\r\n  }\r\n\r\n  handleSearchChange(event)\r\n  {\r\n    this.setState({search: event.target.value})\r\n  }\r\n\r\n  filterProjectsbyTech(tech) {\r\n    return function (project) {\r\n\r\n        if (tech !== \"\" || tech.length > 0)\r\n        {\r\n          const projectTechs = Object.keys(project.ProjectTechs).map((key) => project.ProjectTechs[key])\r\n          return projectTechs.includes(tech);\r\n        }\r\n        else\r\n        {\r\n          return project.ProjectTitle !== \"\";\r\n        }\r\n    };\r\n  }\r\n\r\n  filterProjectsBySearch(search){\r\n    return function (project) {\r\n      if (search !== \"\" || search.length > 0)\r\n      {\r\n        return project.ProjectTitle.toLowerCase().includes(search.toLowerCase());\r\n      }\r\n      else\r\n      {\r\n        return project.ProjectTitle !== \"\";\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n  \r\n\r\n  return (\r\n    <div className=\"work-container\">\r\n      <div className=\"row\">\r\n      <h1>My projects</h1> \r\n      {this.props.baseUrl}\r\n      </div>\r\n      <div className=\"row\">\r\n      <ButtonToolbar>\r\n        <ButtonGroup className=\"me-2 d-flex flex-wrap\">\r\n          {/* <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"HTML\">HTML</Button> */}\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"Javascript\">JavaScript</Button>\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"CSS\">CSS</Button>\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"React\">React</Button>\r\n        </ButtonGroup>\r\n        <ButtonGroup className=\"me-2\">\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"PHP\">PHP</Button>\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"SQL\">SQL</Button>\r\n        </ButtonGroup>\r\n        {/* <ButtonGroup className=\"me-2\">\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"Java\">Java</Button>\r\n        </ButtonGroup> */}\r\n        <ButtonGroup className=\"me-2\">\r\n          <Button className=\"work-button\" variant=\"outline-success\" onClick={this.handleTechPress} value=\"\">Show All</Button>\r\n        </ButtonGroup>\r\n        <InputGroup className=\"work-search\">\r\n          <InputGroup.Text className=\"work-search-text\" id=\"workSearch\">Search</InputGroup.Text>\r\n          <FormControl\r\n            className=\"work-search-bar\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Project Name\"\r\n            aria-label=\"Search Group\"\r\n            aria-describedby=\"workSearch\"\r\n            onChange={this.handleSearchChange}\r\n          />\r\n        </InputGroup>\r\n      </ButtonToolbar>\r\n      </div>\r\n      <div className=\"row\">\r\n        \r\n        { (this.state.projects.length > 0) ? \r\n          this.state.projects.filter(this.filterProjectsbyTech(this.state.tech)).filter(this.filterProjectsBySearch(this.state.search)).map((proj) => {\r\n            return (\r\n              <div className=\"col-12 col-md-4\">\r\n              <ProjectCard\r\n                ProjectImg={proj.ProjectImg}\r\n                ProjectTitle={proj.ProjectTitle}\r\n                ProjectDesc={proj.ProjectDesc}\r\n                ProjectURL={proj.ProjectURL}\r\n                ProjectGit={proj.ProjectGit}\r\n                ProjectDesigns={proj.ProjectDesigns}\r\n                ProjectTechs={Object.keys(proj.ProjectTechs).map((key) => proj.ProjectTechs[key])}\r\n                baseUrl = {this.props.baseUrl}\r\n              />\r\n              </div>\r\n            );\r\n          }) : \"\"\r\n        //   workList.filter(this.filterProjectsbyTech(this.state.tech)).filter(this.filterProjectsBySearch(this.state.search)).map((proj) => {\r\n        //   return (\r\n        //     <div className=\"col-12 col-md-4\">\r\n        //     <ProjectCard\r\n        //       ProjectImg={proj.ProjectImg}\r\n        //       ProjectTitle={proj.ProjectTitle}\r\n        //       ProjectDesc={proj.ProjectDesc}\r\n        //       ProjectURL={proj.ProjectURL}\r\n        //       ProjectGit={proj.ProjectGit}\r\n        //       ProjectDesigns={proj.ProjectDesigns}\r\n        //       ProjectTechs={Object.keys(proj.ProjectTechs).map((key) => proj.ProjectTechs[key])}\r\n        //       baseUrl = {this.props.baseUrl}\r\n        //     />\r\n        //     </div>\r\n        //   );\r\n        // })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default Work;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./styles.css\";\r\nimport \"./app.css\";\r\nimport React from \"react\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Contact from \"./components/Contact\";\r\nimport About from \"./components/About\";\r\nimport Work from \"./components/Work\";\r\nimport { FirebaseContext } from \"./config/firebase\";\r\n\r\nclass App extends React.Component {\r\n  // static contextType = FirebaseContext;\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {baseUrl: \"\"}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.title=\"Eoin O'Neill's Portfolio\";\r\n    // console.log(FirebaseContext.baseUrl);\r\n    // console.log(await this.context.api.getProjects());\r\n  }\r\n  render() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path=\"/work\" component={Work} baseUrl={this.state.baseUrl} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/csb-k8ebk\" component={Home} />\r\n          <Route path=\"\" exact component={Home} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport FirebaseProvider from \"./config/firebase\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseProvider>\r\n    <App />\r\n    </FirebaseProvider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}